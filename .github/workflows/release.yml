name: Build and Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version (e.g. v1.0.0)"
        required: true
        default: "v0.0.2-alpha"
      draft:
        description: "Is this a draft release? (true/false)"
        required: true
        default: "true"
      prerelease:
        description: "Is this a pre-release? (true/false)"
        required: true
        default: "false"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: windows
            arch: amd64
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.16"

      - name: Build binary for ${{ matrix.os }} ${{ matrix.arch }}
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
        run: |
          mkdir -p tmp
          if [ "${{ matrix.os }}" = "windows" ]; then
            GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} CGO_ENABLED=0 go build -o tmp/netchecker.exe
          else
            GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} CGO_ENABLED=0 go build -o tmp/netchecker
          fi

      - name: Package binary and config files
        run: |
          ls -latr
          mkdir -p netchecker/bin
          cp config.yml netchecker/
          cp report.tpl netchecker/
          if [ "${{ matrix.os }}" = "windows" ]; then
            cp tmp/netchecker.exe netchecker/bin
            zip -r netchecker-${{ matrix.os }}-${{ matrix.arch }}.zip netchecker
          else
            cp tmp/netchecker netchecker/bin
            tar zcf netchecker-${{ matrix.os }}-${{ matrix.arch }}.tar.gz netchecker
          fi

      - name: Set artifact file name
        id: set_artifact_name
        run: |
          if [ "${{ matrix.os }}" = "windows" ]; then
            echo "ARTIFACT_NAME=netchecker-${{ matrix.os }}-${{ matrix.arch }}.zip" >> $GITHUB_OUTPUT
          else
            echo "ARTIFACT_NAME=netchecker-${{ matrix.os }}-${{ matrix.arch }}.tar.gz" >> $GITHUB_OUTPUT
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: netchecker-${{ matrix.os }}-${{ matrix.arch }}
          path: ${{ steps.set_artifact_name.outputs.ARTIFACT_NAME }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.release_version }}
          release_name: Release ${{ github.event.inputs.release_version }}
          draft: ${{ github.event.inputs.draft }}
          prerelease: ${{ github.event.inputs.prerelease }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.release_version }}
          files: |
            artifacts/**/*.zip
            artifacts/**/*.tar.gz